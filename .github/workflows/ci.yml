name: Test
on: push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Build docker image
      working-directory: ./tests
      run: |
        docker build -f Dockerfile -t test-runner ..
        docker create --name extract test-runner
    - name: Run tests
      run: |
        docker run test-runner
    - name: Extract artifacts
      run: |
        docker cp extract:/bin/deno amz-deno
        docker cp extract:/src/runtime/deno-lambda-layer.zip deno-lambda-layer.zip
        docker cp extract:/src/runtime/deno-lambda-example.zip deno-lambda-example.zip
        gzip -9 amz-deno
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/') && github.repository == 'hayd/deno-lambda'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: |
          amz-deno.gz
          deno-lambda-layer.zip
          deno-lambda-example.zip
        draft: true
    - name: Publish to SAR
      # if: startsWith(github.ref, 'refs/tags/') && github.repository == 'hayd/deno-lambda'
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        DENO_LAMBDA_BUCKET: ${{ secrets.DENO_LAMBDA_BUCKET }}
      run: |
        export TAG=$(echo $GITHUB_REF | tr / '\n' | tail -n 1)
        echo tag: $TAG
        export TAG=0.0.69
        export DEBIAN_FRONTEND=noninteractive
        sudo apt -qq update &> /dev/null
        sudo apt -qq install -y awscli python3-setuptools &> /dev/null
        aws s3 cp --quiet deno-lambda-layer.zip s3://$DENO_LAMBDA_BUCKET/deno-lambda-layer_$TAG.zip --acl public-read
        cd layer
        sed -i -e s/DENO_LAMBDA_BUCKET/$DENO_LAMBDA_BUCKET/g template.yml
        sed -i -e s/DENO_LAMBDA_VERSION/$TAG/g template.yml
        # FIXME: Installation of sam is fiddly.
        pip3 -q install -U --force pip
        export PATH=/home/runner/.local/bin:$PATH
        export SAM_CLI_TELEMETRY=1
        python3 -m pip -q install --user aws-sam-cli
        cat template.yml
        sam publish --region us-east-1
